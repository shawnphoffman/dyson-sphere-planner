{"version":3,"sources":["components/Sidebar/ProductListItem.js","components/Sidebar/SectionHeader.js","components/Sidebar/SettingCheckbox.js","components/Sidebar/Sidebar.js"],"names":["ProductListItem","onClick","className","memo","ListItem","SectionHeader","label","HeaderWrapper","SettingCheckbox","hint","id","name","type","checked","onChange","htmlFor","InputContainer","Hint","Sidebar","useContext","handleFractions","useCallback","dispatchRecipe","RecipeAction","TOGGLE_FRACTION","Sentry","category","message","level","Info","Panelbear","handleLeftMargin","dispatchProduct","ProductAction","TOGGLE_LEFT_MARGIN","handleOnePerPage","TOGGLE_ONE_PER_PAGE","handleReturnClick","handleTypeToggleClick","handleReturnAllClick","RETURN_ALL_PRODUCTS","icon","stateRecipe","stateProduct","CategoriesJson","p","SidebarSection","SectionContent","Reset","HideMobile"],"mappings":"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","file":"static/js/4.d2b7ab73.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\n//\nconst ProductListItem = ({ name, onClick }) => {\n\treturn (\n\t\t<ListItem onClick={() => onClick(name)}>\n\t\t\t{name} <i className=\"fas fa-times fa-fw\" />\n\t\t</ListItem>\n\t)\n}\nexport default memo(ProductListItem)\n\nconst ListItem = styled.li`\n\tcolor: darkred;\n\tcursor: pointer;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\n//\nconst SectionHeader = ({ icon, label }) => (\n\t<HeaderWrapper>\n\t\t<i className={`fas ${icon} fa-fw`}></i>\n\t\t<span> {label}</span>\n\t</HeaderWrapper>\n)\n\nexport default memo(SectionHeader)\n\nconst HeaderWrapper = styled.div`\n\tmargin: 18px 0 12px 0;\n\tfont-weight: bold;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\n//\nconst SettingCheckbox = ({ label, name, checked, onChange, hint }) => (\n\t<InputContainer>\n\t\t<input id={name} name={name} type=\"checkbox\" checked={checked} onChange={onChange} />\n\t\t<label htmlFor={name}>{label}</label>\n\t\t{hint && <Hint>{hint}</Hint>}\n\t</InputContainer>\n)\n\nexport default memo(SettingCheckbox)\n\nconst InputContainer = styled.div`\n\tmargin: 8px 0 8px 18px;\n\tfont-size: 0.8em;\n`\nconst Hint = styled.div`\n\tfont-size: 0.8em;\n\tfont-style: italic;\n\tmargin-left: 18px;\n\tmargin-top: 2px;\n\tcolor: #444;\n`\n","import React, { memo, useCallback, useContext } from 'react'\nimport { styled } from '@linaria/react'\nimport * as Panelbear from '@panelbear/panelbear-js'\nimport * as Sentry from '@sentry/react'\n\nimport CategoriesJson from 'data/categories-stable.json'\n\nimport { ProductAction, ProductContext } from 'context/ProductContext'\nimport { RecipeAction, RecipeContext } from 'context/RecipeContext'\n\nimport ProductListItem from './ProductListItem'\nimport SectionHeader from './SectionHeader'\nimport SettingCheckbox from './SettingCheckbox'\n\n//\nconst Sidebar = () => {\n\tconst [stateProduct, dispatchProduct] = useContext(ProductContext)\n\tconst [stateRecipe, dispatchRecipe] = useContext(RecipeContext)\n\n\t//\n\tconst handleFractions = useCallback(() => {\n\t\tdispatchRecipe({ type: RecipeAction.TOGGLE_FRACTION })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'setting-change',\n\t\t\tmessage: 'Fraction changed',\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\n\t\tPanelbear.track('Fraction_Changed')\n\t}, [dispatchRecipe])\n\n\t//\n\tconst handleLeftMargin = useCallback(() => {\n\t\tdispatchProduct({ type: ProductAction.TOGGLE_LEFT_MARGIN })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'setting-change',\n\t\t\tmessage: 'Left-margin changed',\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\n\t\tPanelbear.track('Left-Margin_Changed')\n\t}, [dispatchProduct])\n\n\t//\n\tconst handleOnePerPage = useCallback(() => {\n\t\tdispatchProduct({ type: ProductAction.TOGGLE_ONE_PER_PAGE })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'setting-change',\n\t\t\tmessage: 'One-per-page changed',\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\n\t\tPanelbear.track('One-Page_Changed')\n\t}, [dispatchProduct])\n\n\t// //\n\t// const handleCycleAmounts = useCallback(() => {\n\t// \tdispatchRecipe({ type: RecipeAction.TOGGLE_CYCLE_AMOUNT })\n\n\t// \tSentry.addBreadcrumb({\n\t// \t\tcategory: 'setting-change',\n\t// \t\tmessage: 'Cycle-amounts changed',\n\t// \t\tlevel: Sentry.Severity.Info,\n\t// \t})\n\n\t// \tPanelbear.track('Cycle-Amounts_Changed')\n\t// }, [dispatchRecipe])\n\n\t//\n\tconst handleReturnClick = useCallback(\n\t\tname => {\n\t\t\tdispatchProduct({ type: ProductAction.RETURN_PRODUCT, name })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'product-returned',\n\t\t\t\tmessage: `Returned: ${name}`,\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\n\t\t\tPanelbear.track(`Product-${name.replace(/\\s+/g, '-')}_Returned`)\n\t\t},\n\t\t[dispatchProduct]\n\t)\n\n\t//\n\tconst handleTypeToggleClick = useCallback(\n\t\t(type, checked) => {\n\t\t\tdispatchProduct({\n\t\t\t\ttype: checked ? ProductAction.HIDE_TYPE : ProductAction.SHOW_TYPE,\n\t\t\t\tname: type,\n\t\t\t})\n\n\t\t\t// Sentry.addBreadcrumb({\n\t\t\t// \tcategory: 'setting-change',\n\t\t\t// \tmessage: 'One-per-page changed',\n\t\t\t// \tlevel: Sentry.Severity.Info,\n\t\t\t// })\n\n\t\t\tPanelbear.track(`Type-${type}_${checked ? 'Hidden' : 'Shown'}`)\n\t\t},\n\t\t[dispatchProduct]\n\t)\n\n\t//\n\tconst handleReturnAllClick = useCallback(() => {\n\t\tdispatchProduct({ type: ProductAction.RETURN_ALL_PRODUCTS })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'all-products-returned',\n\t\t\tmessage: 'Returned all products',\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\n\t\tPanelbear.track('All-Products_Returned')\n\t}, [dispatchProduct])\n\n\treturn (\n\t\t<>\n\t\t\t{/* <VersionLabel>Early Access v0.4.2.0</VersionLabel> */}\n\t\t\t<SidebarSection>\n\t\t\t\t<SectionHeader icon=\"fa-cog\" label=\"Settings\" />\n\t\t\t\t<SettingCheckbox\n\t\t\t\t\tlabel=\"Use Fractions\"\n\t\t\t\t\tname=\"fractions\"\n\t\t\t\t\tchecked={stateRecipe.checked}\n\t\t\t\t\tonChange={handleFractions}\n\t\t\t\t\thint=\"Conversions are hard\"\n\t\t\t\t/>\n\t\t\t\t{/* <SettingCheckbox\n\t\t\t\t\tlabel=\"Show Cycle Amounts\"\n\t\t\t\t\tname=\"cycleAmount\"\n\t\t\t\t\tchecked={stateRecipe.cycleAmount}\n\t\t\t\t\tonChange={handleCycleAmounts}\n\t\t\t\t\thint=\"Include per cycle inputs/outputs\"\n\t\t\t\t/> */}\n\t\t\t\t<HideMobile>\n\t\t\t\t\t<SettingCheckbox\n\t\t\t\t\t\tlabel=\"Pad Left Margin\"\n\t\t\t\t\t\tname=\"leftMargin\"\n\t\t\t\t\t\tchecked={stateProduct.padLeftMargin}\n\t\t\t\t\t\tonChange={handleLeftMargin}\n\t\t\t\t\t\thint=\"To account for punched holes\"\n\t\t\t\t\t/>\n\t\t\t\t\t<SettingCheckbox\n\t\t\t\t\t\tlabel=\"One Recipe Per Page\"\n\t\t\t\t\t\tname=\"onePerPage\"\n\t\t\t\t\t\tchecked={stateProduct.onePerPage}\n\t\t\t\t\t\tonChange={handleOnePerPage}\n\t\t\t\t\t\thint=\"Waste ALL the paper\"\n\t\t\t\t\t/>\n\t\t\t\t</HideMobile>\n\t\t\t</SidebarSection>\n\n\t\t\t{/*  */}\n\t\t\t<SidebarSection>\n\t\t\t\t<SectionHeader icon=\"fa-check-circle\" label=\"Categories\" />\n\t\t\t\t{CategoriesJson.map(type => (\n\t\t\t\t\t<SettingCheckbox\n\t\t\t\t\t\tkey={type}\n\t\t\t\t\t\tlabel={type}\n\t\t\t\t\t\tname={`cat-${type}`}\n\t\t\t\t\t\tchecked={!stateProduct.hiddenTypes.includes(type)}\n\t\t\t\t\t\tonChange={() => handleTypeToggleClick(type, !stateProduct.hiddenTypes.includes(type))}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SidebarSection>\n\n\t\t\t{/*  */}\n\t\t\t{stateProduct.removedProducts.length > 0 && (\n\t\t\t\t<SidebarSection>\n\t\t\t\t\t<SectionHeader icon=\"fa-filter\" label=\"Filtered Items\" />\n\t\t\t\t\t<SectionContent>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<Reset onClick={handleReturnAllClick}>Reset All</Reset>\n\t\t\t\t\t\t\t{stateProduct.removedProducts.map(p => (\n\t\t\t\t\t\t\t\t<ProductListItem name={p} key={p} onClick={handleReturnClick} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</SectionContent>\n\t\t\t\t</SidebarSection>\n\t\t\t)}\n\n\t\t\t{/*  */}\n\t\t\t<HideMobile>\n\t\t\t\t<SidebarSection>\n\t\t\t\t\t<SectionHeader icon=\"fa-print\" label=\"Print Settings\" />\n\t\t\t\t\t<SectionContent>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Margins:</strong> None\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Scale:</strong> 100\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Background Graphics:</strong> ✅️\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</SectionContent>\n\t\t\t\t</SidebarSection>\n\t\t\t</HideMobile>\n\n\t\t\t{/*  */}\n\t\t\t{/* <Disclaimer>\n\t\t\t\tAssets come from Satisfactory or from websites created and owned by Coffee Stain Studios. All copyright and\n\t\t\t\tregistered trademarks present in the images are proprietary to Coffee Stain Studios.\n\t\t\t</Disclaimer> */}\n\t\t</>\n\t)\n}\n\nexport default memo(Sidebar)\n\n// const VersionLabel = styled.div`\n// \tfont-size: 12px;\n// \tmargin-top: 6px;\n// `\n\nconst SidebarSection = styled.div`\n\tmargin: 6px 0;\n`\n\nconst SectionContent = styled.div`\n\tfont-size: 0.8em;\n\tmargin: 12px 0 12px 18px;\n`\n\nconst Reset = styled.li`\n\tcolor: darkred;\n\tcursor: pointer;\n\tfont-weight: bold;\n`\n\nconst HideMobile = styled.div`\n\t@media (max-width: 600px) {\n\t\tdisplay: none;\n\t}\n`\n\n// const Disclaimer = styled.div`\n// \twidth: 240px;\n// \tfont-size: 11px;\n// \tcolor: #454545;\n// \tline-height: 1.4;\n// \tfont-style: italic;\n// \tflex: 1;\n// \tdisplay: flex;\n// \tjustify-content: flex-end;\n// \tflex-direction: column;\n\n// \t@media print {\n// \t\tdisplay: none;\n// \t}\n\n// \t@media (max-width: 600px) {\n// \t\tdisplay: none;\n// \t}\n// `\n"],"sourceRoot":""}